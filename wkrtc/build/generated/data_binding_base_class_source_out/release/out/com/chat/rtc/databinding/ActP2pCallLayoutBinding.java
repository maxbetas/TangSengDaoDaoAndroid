// Generated by view binder compiler. Do not edit!
package com.chat.rtc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chat.rtc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.webrtc.SurfaceViewRenderer;

public final class ActP2pCallLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout answerAudioIv;

  @NonNull
  public final AppCompatImageView answerIV;

  @NonNull
  public final LinearLayout answerIv;

  @NonNull
  public final LinearLayout answerLayout;

  @NonNull
  public final AppCompatImageView audioAnswerIV;

  @NonNull
  public final LinearLayout audioLayout;

  @NonNull
  public final AppCompatImageView avatarIv;

  @NonNull
  public final View coverView;

  @NonNull
  public final SurfaceViewRenderer fullRenderer;

  @NonNull
  public final AppCompatImageView hangUpIV;

  @NonNull
  public final AppCompatImageView minimizeIv;

  @NonNull
  public final AppCompatImageView muteIV;

  @NonNull
  public final LinearLayout muteLayout;

  @NonNull
  public final TextView nameTv;

  @NonNull
  public final SurfaceViewRenderer smallRenderer;

  @NonNull
  public final AppCompatImageView speakerIV;

  @NonNull
  public final AppCompatImageView switchAudioIV;

  @NonNull
  public final AppCompatImageView switchCameraIV;

  @NonNull
  public final AppCompatImageView switchVideoIV;

  @NonNull
  public final TextView timeTv;

  @NonNull
  public final LinearLayout userLayout;

  @NonNull
  public final AppCompatImageView videoAnswerIV;

  @NonNull
  public final LinearLayout videoAnswerLayout;

  @NonNull
  public final LinearLayout videoLayout;

  @NonNull
  public final TextView waitingAnswerTv;

  private ActP2pCallLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout answerAudioIv, @NonNull AppCompatImageView answerIV,
      @NonNull LinearLayout answerIv, @NonNull LinearLayout answerLayout,
      @NonNull AppCompatImageView audioAnswerIV, @NonNull LinearLayout audioLayout,
      @NonNull AppCompatImageView avatarIv, @NonNull View coverView,
      @NonNull SurfaceViewRenderer fullRenderer, @NonNull AppCompatImageView hangUpIV,
      @NonNull AppCompatImageView minimizeIv, @NonNull AppCompatImageView muteIV,
      @NonNull LinearLayout muteLayout, @NonNull TextView nameTv,
      @NonNull SurfaceViewRenderer smallRenderer, @NonNull AppCompatImageView speakerIV,
      @NonNull AppCompatImageView switchAudioIV, @NonNull AppCompatImageView switchCameraIV,
      @NonNull AppCompatImageView switchVideoIV, @NonNull TextView timeTv,
      @NonNull LinearLayout userLayout, @NonNull AppCompatImageView videoAnswerIV,
      @NonNull LinearLayout videoAnswerLayout, @NonNull LinearLayout videoLayout,
      @NonNull TextView waitingAnswerTv) {
    this.rootView = rootView;
    this.answerAudioIv = answerAudioIv;
    this.answerIV = answerIV;
    this.answerIv = answerIv;
    this.answerLayout = answerLayout;
    this.audioAnswerIV = audioAnswerIV;
    this.audioLayout = audioLayout;
    this.avatarIv = avatarIv;
    this.coverView = coverView;
    this.fullRenderer = fullRenderer;
    this.hangUpIV = hangUpIV;
    this.minimizeIv = minimizeIv;
    this.muteIV = muteIV;
    this.muteLayout = muteLayout;
    this.nameTv = nameTv;
    this.smallRenderer = smallRenderer;
    this.speakerIV = speakerIV;
    this.switchAudioIV = switchAudioIV;
    this.switchCameraIV = switchCameraIV;
    this.switchVideoIV = switchVideoIV;
    this.timeTv = timeTv;
    this.userLayout = userLayout;
    this.videoAnswerIV = videoAnswerIV;
    this.videoAnswerLayout = videoAnswerLayout;
    this.videoLayout = videoLayout;
    this.waitingAnswerTv = waitingAnswerTv;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActP2pCallLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActP2pCallLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.act_p2p_call_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActP2pCallLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answerAudioIv;
      LinearLayout answerAudioIv = ViewBindings.findChildViewById(rootView, id);
      if (answerAudioIv == null) {
        break missingId;
      }

      id = R.id.answerIV;
      AppCompatImageView answerIV = ViewBindings.findChildViewById(rootView, id);
      if (answerIV == null) {
        break missingId;
      }

      id = R.id.answerIv;
      LinearLayout answerIv = ViewBindings.findChildViewById(rootView, id);
      if (answerIv == null) {
        break missingId;
      }

      id = R.id.answerLayout;
      LinearLayout answerLayout = ViewBindings.findChildViewById(rootView, id);
      if (answerLayout == null) {
        break missingId;
      }

      id = R.id.audioAnswerIV;
      AppCompatImageView audioAnswerIV = ViewBindings.findChildViewById(rootView, id);
      if (audioAnswerIV == null) {
        break missingId;
      }

      id = R.id.audioLayout;
      LinearLayout audioLayout = ViewBindings.findChildViewById(rootView, id);
      if (audioLayout == null) {
        break missingId;
      }

      id = R.id.avatarIv;
      AppCompatImageView avatarIv = ViewBindings.findChildViewById(rootView, id);
      if (avatarIv == null) {
        break missingId;
      }

      id = R.id.coverView;
      View coverView = ViewBindings.findChildViewById(rootView, id);
      if (coverView == null) {
        break missingId;
      }

      id = R.id.fullRenderer;
      SurfaceViewRenderer fullRenderer = ViewBindings.findChildViewById(rootView, id);
      if (fullRenderer == null) {
        break missingId;
      }

      id = R.id.hangUpIV;
      AppCompatImageView hangUpIV = ViewBindings.findChildViewById(rootView, id);
      if (hangUpIV == null) {
        break missingId;
      }

      id = R.id.minimizeIv;
      AppCompatImageView minimizeIv = ViewBindings.findChildViewById(rootView, id);
      if (minimizeIv == null) {
        break missingId;
      }

      id = R.id.muteIV;
      AppCompatImageView muteIV = ViewBindings.findChildViewById(rootView, id);
      if (muteIV == null) {
        break missingId;
      }

      id = R.id.muteLayout;
      LinearLayout muteLayout = ViewBindings.findChildViewById(rootView, id);
      if (muteLayout == null) {
        break missingId;
      }

      id = R.id.nameTv;
      TextView nameTv = ViewBindings.findChildViewById(rootView, id);
      if (nameTv == null) {
        break missingId;
      }

      id = R.id.smallRenderer;
      SurfaceViewRenderer smallRenderer = ViewBindings.findChildViewById(rootView, id);
      if (smallRenderer == null) {
        break missingId;
      }

      id = R.id.speakerIV;
      AppCompatImageView speakerIV = ViewBindings.findChildViewById(rootView, id);
      if (speakerIV == null) {
        break missingId;
      }

      id = R.id.switchAudioIV;
      AppCompatImageView switchAudioIV = ViewBindings.findChildViewById(rootView, id);
      if (switchAudioIV == null) {
        break missingId;
      }

      id = R.id.switchCameraIV;
      AppCompatImageView switchCameraIV = ViewBindings.findChildViewById(rootView, id);
      if (switchCameraIV == null) {
        break missingId;
      }

      id = R.id.switchVideoIV;
      AppCompatImageView switchVideoIV = ViewBindings.findChildViewById(rootView, id);
      if (switchVideoIV == null) {
        break missingId;
      }

      id = R.id.timeTv;
      TextView timeTv = ViewBindings.findChildViewById(rootView, id);
      if (timeTv == null) {
        break missingId;
      }

      id = R.id.userLayout;
      LinearLayout userLayout = ViewBindings.findChildViewById(rootView, id);
      if (userLayout == null) {
        break missingId;
      }

      id = R.id.videoAnswerIV;
      AppCompatImageView videoAnswerIV = ViewBindings.findChildViewById(rootView, id);
      if (videoAnswerIV == null) {
        break missingId;
      }

      id = R.id.videoAnswerLayout;
      LinearLayout videoAnswerLayout = ViewBindings.findChildViewById(rootView, id);
      if (videoAnswerLayout == null) {
        break missingId;
      }

      id = R.id.videoLayout;
      LinearLayout videoLayout = ViewBindings.findChildViewById(rootView, id);
      if (videoLayout == null) {
        break missingId;
      }

      id = R.id.waitingAnswerTv;
      TextView waitingAnswerTv = ViewBindings.findChildViewById(rootView, id);
      if (waitingAnswerTv == null) {
        break missingId;
      }

      return new ActP2pCallLayoutBinding((RelativeLayout) rootView, answerAudioIv, answerIV,
          answerIv, answerLayout, audioAnswerIV, audioLayout, avatarIv, coverView, fullRenderer,
          hangUpIV, minimizeIv, muteIV, muteLayout, nameTv, smallRenderer, speakerIV, switchAudioIV,
          switchCameraIV, switchVideoIV, timeTv, userLayout, videoAnswerIV, videoAnswerLayout,
          videoLayout, waitingAnswerTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
