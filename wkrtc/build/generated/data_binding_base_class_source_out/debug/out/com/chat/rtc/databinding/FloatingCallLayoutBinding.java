// Generated by view binder compiler. Do not edit!
package com.chat.rtc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chat.rtc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.webrtc.SurfaceViewRenderer;

public final class FloatingCallLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatImageView floatingCallIv;

  @NonNull
  public final SurfaceViewRenderer surfaceView;

  @NonNull
  public final TextView timeTv;

  @NonNull
  public final LinearLayout timeView;

  private FloatingCallLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatImageView floatingCallIv, @NonNull SurfaceViewRenderer surfaceView,
      @NonNull TextView timeTv, @NonNull LinearLayout timeView) {
    this.rootView = rootView;
    this.floatingCallIv = floatingCallIv;
    this.surfaceView = surfaceView;
    this.timeTv = timeTv;
    this.timeView = timeView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FloatingCallLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FloatingCallLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.floating_call_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FloatingCallLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.floatingCallIv;
      AppCompatImageView floatingCallIv = ViewBindings.findChildViewById(rootView, id);
      if (floatingCallIv == null) {
        break missingId;
      }

      id = R.id.surfaceView;
      SurfaceViewRenderer surfaceView = ViewBindings.findChildViewById(rootView, id);
      if (surfaceView == null) {
        break missingId;
      }

      id = R.id.timeTv;
      TextView timeTv = ViewBindings.findChildViewById(rootView, id);
      if (timeTv == null) {
        break missingId;
      }

      id = R.id.timeView;
      LinearLayout timeView = ViewBindings.findChildViewById(rootView, id);
      if (timeView == null) {
        break missingId;
      }

      return new FloatingCallLayoutBinding((LinearLayout) rootView, floatingCallIv, surfaceView,
          timeTv, timeView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
