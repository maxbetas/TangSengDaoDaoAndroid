// Generated by view binder compiler. Do not edit!
package com.chat.rtc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chat.rtc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.webrtc.SurfaceViewRenderer;
import rtc.view.LoadingView;

public final class ItemSurfaceviewBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final AppCompatImageView avatarIv;

  @NonNull
  public final FrameLayout closeMicrophoneIv;

  @NonNull
  public final FrameLayout loadingLayout;

  @NonNull
  public final LoadingView loadingView;

  @NonNull
  public final FrameLayout speakerIv;

  @NonNull
  public final SurfaceViewRenderer surfaceView;

  private ItemSurfaceviewBinding(@NonNull FrameLayout rootView,
      @NonNull AppCompatImageView avatarIv, @NonNull FrameLayout closeMicrophoneIv,
      @NonNull FrameLayout loadingLayout, @NonNull LoadingView loadingView,
      @NonNull FrameLayout speakerIv, @NonNull SurfaceViewRenderer surfaceView) {
    this.rootView = rootView;
    this.avatarIv = avatarIv;
    this.closeMicrophoneIv = closeMicrophoneIv;
    this.loadingLayout = loadingLayout;
    this.loadingView = loadingView;
    this.speakerIv = speakerIv;
    this.surfaceView = surfaceView;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSurfaceviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSurfaceviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_surfaceview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSurfaceviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatarIv;
      AppCompatImageView avatarIv = ViewBindings.findChildViewById(rootView, id);
      if (avatarIv == null) {
        break missingId;
      }

      id = R.id.closeMicrophoneIv;
      FrameLayout closeMicrophoneIv = ViewBindings.findChildViewById(rootView, id);
      if (closeMicrophoneIv == null) {
        break missingId;
      }

      id = R.id.loadingLayout;
      FrameLayout loadingLayout = ViewBindings.findChildViewById(rootView, id);
      if (loadingLayout == null) {
        break missingId;
      }

      id = R.id.loadingView;
      LoadingView loadingView = ViewBindings.findChildViewById(rootView, id);
      if (loadingView == null) {
        break missingId;
      }

      id = R.id.speakerIv;
      FrameLayout speakerIv = ViewBindings.findChildViewById(rootView, id);
      if (speakerIv == null) {
        break missingId;
      }

      id = R.id.surfaceView;
      SurfaceViewRenderer surfaceView = ViewBindings.findChildViewById(rootView, id);
      if (surfaceView == null) {
        break missingId;
      }

      return new ItemSurfaceviewBinding((FrameLayout) rootView, avatarIv, closeMicrophoneIv,
          loadingLayout, loadingView, speakerIv, surfaceView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
