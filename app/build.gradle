plugins {
    id 'com.android.application'
    id 'kotlin-parcelize'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
}

def getVersionCode() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--count', 'HEAD'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    } catch (Exception e) {
        // 如果git命令失败，返回默认值
        return 1
    }
}

android {
    signingConfigs {
        debug {
            storeFile file('../sign.jks')
            storePassword 'pZ4KU5jAMDRmxQ3f4KWA'
            keyAlias = 'xingxunliao'
            keyPassword 'pZ4KU5jAMDRmxQ3f4KWA'
        }
        release {
            storeFile file('../sign.jks')
            storePassword 'pZ4KU5jAMDRmxQ3f4KWA'
            keyAlias = 'xingxunliao'
            keyPassword 'pZ4KU5jAMDRmxQ3f4KWA'
        }
    }
    namespace 'com.xingxun.xingxunliao'
    compileSdk rootProject.ext.compileSdkVersion
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false


    defaultConfig {
        applicationId "com.xingxun.xingxunliao"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode getVersionCode()
        versionName "1.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        ndk {
            //根据需要 自行选择添加的对应cpu类型的.so库。
            abiFilters "armeabi-v7a", "arm64-v8a"
//            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86'
        }
    }

    buildTypes {
        release {
            jniDebuggable true
            //  zipAlignEnabled true   //Zipalign优化
            minifyEnabled true  // 是否混淆
            shrinkResources true  // 是否去除无效的资源文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
//            jniDebuggable true
//            zipAlignEnabled true   //Zipalign优化
//            minifyEnabled true  // 是否混淆
//            shrinkResources true  // 是否去除无效的资源文件
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            // 排除包含git版本信息的敏感文件
            excludes += '**/androidsupportmultidexversion.txt'
        }
    }
    
    testOptions {
        unitTests {
            includeAndroidResources = true
            // 使用JUnit 5测试引擎
            all {
                useJUnitPlatform()
            }
        }
    }
}

dependencies {
    api project(':wkbase')
    implementation project(path: ':wkuikit')
    implementation project(path: ':wklogin')
    implementation project(path: ':wkscan')
    implementation project(path: ':wkpush')
    implementation project(path: ':wkrtc')
    implementation project(path: ':wkadvanced')
    implementation project(path: ':wkgroupmanage')
    implementation project(path: ':wksecurity')
    
    // Test dependencies - JUnit 5 (Jupiter)
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.3'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}