// Generated by view binder compiler. Do not edit!
package com.chat.advanced.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chat.advanced.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActSearchRecordLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView cancelTv;

  @NonNull
  public final TextView nodataTv;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final LinearLayout resultView;

  @NonNull
  public final AppCompatEditText searchEt;

  @NonNull
  public final AppCompatImageView searchIv;

  @NonNull
  public final LinearLayout searchTypeLayout;

  @NonNull
  public final RecyclerView typeRecyclerView;

  private ActSearchRecordLayoutBinding(@NonNull LinearLayout rootView, @NonNull TextView cancelTv,
      @NonNull TextView nodataTv, @NonNull RecyclerView recyclerView,
      @NonNull LinearLayout resultView, @NonNull AppCompatEditText searchEt,
      @NonNull AppCompatImageView searchIv, @NonNull LinearLayout searchTypeLayout,
      @NonNull RecyclerView typeRecyclerView) {
    this.rootView = rootView;
    this.cancelTv = cancelTv;
    this.nodataTv = nodataTv;
    this.recyclerView = recyclerView;
    this.resultView = resultView;
    this.searchEt = searchEt;
    this.searchIv = searchIv;
    this.searchTypeLayout = searchTypeLayout;
    this.typeRecyclerView = typeRecyclerView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActSearchRecordLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActSearchRecordLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.act_search_record_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActSearchRecordLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelTv;
      TextView cancelTv = ViewBindings.findChildViewById(rootView, id);
      if (cancelTv == null) {
        break missingId;
      }

      id = R.id.nodataTv;
      TextView nodataTv = ViewBindings.findChildViewById(rootView, id);
      if (nodataTv == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.resultView;
      LinearLayout resultView = ViewBindings.findChildViewById(rootView, id);
      if (resultView == null) {
        break missingId;
      }

      id = R.id.searchEt;
      AppCompatEditText searchEt = ViewBindings.findChildViewById(rootView, id);
      if (searchEt == null) {
        break missingId;
      }

      id = R.id.searchIv;
      AppCompatImageView searchIv = ViewBindings.findChildViewById(rootView, id);
      if (searchIv == null) {
        break missingId;
      }

      id = R.id.searchTypeLayout;
      LinearLayout searchTypeLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchTypeLayout == null) {
        break missingId;
      }

      id = R.id.typeRecyclerView;
      RecyclerView typeRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (typeRecyclerView == null) {
        break missingId;
      }

      return new ActSearchRecordLayoutBinding((LinearLayout) rootView, cancelTv, nodataTv,
          recyclerView, resultView, searchEt, searchIv, searchTypeLayout, typeRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
