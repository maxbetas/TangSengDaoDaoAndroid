// Generated by view binder compiler. Do not edit!
package com.chat.groupmanage.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chat.base.ui.components.SwitchView;
import com.chat.groupmanage.R;
import com.scwang.smart.refresh.layout.SmartRefreshLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActGroupManageLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SwitchView allowNewMembersViewHistorMesgSwitch;

  @NonNull
  public final LinearLayout blackListLayout;

  @NonNull
  public final SwitchView forbiddenAddFriendSwitch;

  @NonNull
  public final SwitchView fullStaffBanSwitch;

  @NonNull
  public final LinearLayout groupOwnerTransferLayout;

  @NonNull
  public final SwitchView invitConfirmationSwitch;

  @NonNull
  public final LinearLayout outUserLayout;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final SmartRefreshLayout refreshLayout;

  private ActGroupManageLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull SwitchView allowNewMembersViewHistorMesgSwitch,
      @NonNull LinearLayout blackListLayout, @NonNull SwitchView forbiddenAddFriendSwitch,
      @NonNull SwitchView fullStaffBanSwitch, @NonNull LinearLayout groupOwnerTransferLayout,
      @NonNull SwitchView invitConfirmationSwitch, @NonNull LinearLayout outUserLayout,
      @NonNull RecyclerView recyclerView, @NonNull SmartRefreshLayout refreshLayout) {
    this.rootView = rootView;
    this.allowNewMembersViewHistorMesgSwitch = allowNewMembersViewHistorMesgSwitch;
    this.blackListLayout = blackListLayout;
    this.forbiddenAddFriendSwitch = forbiddenAddFriendSwitch;
    this.fullStaffBanSwitch = fullStaffBanSwitch;
    this.groupOwnerTransferLayout = groupOwnerTransferLayout;
    this.invitConfirmationSwitch = invitConfirmationSwitch;
    this.outUserLayout = outUserLayout;
    this.recyclerView = recyclerView;
    this.refreshLayout = refreshLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActGroupManageLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActGroupManageLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.act_group_manage_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActGroupManageLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allowNewMembersViewHistorMesgSwitch;
      SwitchView allowNewMembersViewHistorMesgSwitch = ViewBindings.findChildViewById(rootView, id);
      if (allowNewMembersViewHistorMesgSwitch == null) {
        break missingId;
      }

      id = R.id.blackListLayout;
      LinearLayout blackListLayout = ViewBindings.findChildViewById(rootView, id);
      if (blackListLayout == null) {
        break missingId;
      }

      id = R.id.forbiddenAddFriendSwitch;
      SwitchView forbiddenAddFriendSwitch = ViewBindings.findChildViewById(rootView, id);
      if (forbiddenAddFriendSwitch == null) {
        break missingId;
      }

      id = R.id.fullStaffBanSwitch;
      SwitchView fullStaffBanSwitch = ViewBindings.findChildViewById(rootView, id);
      if (fullStaffBanSwitch == null) {
        break missingId;
      }

      id = R.id.groupOwnerTransferLayout;
      LinearLayout groupOwnerTransferLayout = ViewBindings.findChildViewById(rootView, id);
      if (groupOwnerTransferLayout == null) {
        break missingId;
      }

      id = R.id.invitConfirmationSwitch;
      SwitchView invitConfirmationSwitch = ViewBindings.findChildViewById(rootView, id);
      if (invitConfirmationSwitch == null) {
        break missingId;
      }

      id = R.id.outUserLayout;
      LinearLayout outUserLayout = ViewBindings.findChildViewById(rootView, id);
      if (outUserLayout == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.refreshLayout;
      SmartRefreshLayout refreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (refreshLayout == null) {
        break missingId;
      }

      return new ActGroupManageLayoutBinding((LinearLayout) rootView,
          allowNewMembersViewHistorMesgSwitch, blackListLayout, forbiddenAddFriendSwitch,
          fullStaffBanSwitch, groupOwnerTransferLayout, invitConfirmationSwitch, outUserLayout,
          recyclerView, refreshLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
