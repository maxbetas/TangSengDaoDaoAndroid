// Generated by view binder compiler. Do not edit!
package com.chat.groupmanage.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chat.groupmanage.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GroupInUserDetailLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final View bottomView;

  @NonNull
  public final TextView contentTv;

  @NonNull
  public final LinearLayout forbiddenLayout;

  @NonNull
  public final TextView timeTv;

  @NonNull
  public final View topView;

  private GroupInUserDetailLayoutBinding(@NonNull LinearLayout rootView, @NonNull View bottomView,
      @NonNull TextView contentTv, @NonNull LinearLayout forbiddenLayout, @NonNull TextView timeTv,
      @NonNull View topView) {
    this.rootView = rootView;
    this.bottomView = bottomView;
    this.contentTv = contentTv;
    this.forbiddenLayout = forbiddenLayout;
    this.timeTv = timeTv;
    this.topView = topView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GroupInUserDetailLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GroupInUserDetailLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.group_in_user_detail_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GroupInUserDetailLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomView;
      View bottomView = ViewBindings.findChildViewById(rootView, id);
      if (bottomView == null) {
        break missingId;
      }

      id = R.id.contentTv;
      TextView contentTv = ViewBindings.findChildViewById(rootView, id);
      if (contentTv == null) {
        break missingId;
      }

      id = R.id.forbiddenLayout;
      LinearLayout forbiddenLayout = ViewBindings.findChildViewById(rootView, id);
      if (forbiddenLayout == null) {
        break missingId;
      }

      id = R.id.timeTv;
      TextView timeTv = ViewBindings.findChildViewById(rootView, id);
      if (timeTv == null) {
        break missingId;
      }

      id = R.id.topView;
      View topView = ViewBindings.findChildViewById(rootView, id);
      if (topView == null) {
        break missingId;
      }

      return new GroupInUserDetailLayoutBinding((LinearLayout) rootView, bottomView, contentTv,
          forbiddenLayout, timeTv, topView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
